---

# soulfigurine
figurine_name: soulstatus

# ironicbadger.ansible_users
users:
  - username: "{{ main_username }}"
    github_username: "{{ main_username }}"
    name: "{{ main_username }}"
    groups: ['wheel']
    uid: "{{ main_uid }}"
groups_to_create:
  - name: "{{ main_groupname }}"
    gid: "{{ main_gid }}"
  - name: wheel

# geerlingguy.ntp
ntp_timezone: "America/Chicago"

# geerlingguy.security
security_ssh_port: 22
security_ssh_password_authentication: "no"
security_ssh_permit_root_login: "no"
security_ssh_usedns: "no"
security_autoupdate_enabled: true
security_fail2ban_enabled: true
security_sudoers_passworded:
  - "{{ main_username }}"

# soultraefik
traefik_file_provider: false
traefik_enable_dashboard: false
traefik_insecure_transport: false

# ironicbadger.docker_compose_generator
appdata_path: /opt/appdata
docker_compose_generator_uid: "{{ main_username }}"
docker_compose_generator_gid: "{{ main_username }}"
docker_compose_generator_output_path: "/home/{{ main_username }}"
main_uid: "1000"
main_gid: "1000"
containers:
###
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
        - 80:80
        - 443:443
    volumes:
        - "{{ appdata_path }}/traefik:/etc/traefik"
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
        - "CLOUDFLARE_EMAIL={{ secret_cloudflare_email }}"
        - "CLOUDFLARE_API_KEY={{ secret_cloudflare_api }}"
    restart: unless-stopped
###
  - service_name: smokeping
    active: true
    image: linuxserver/smokeping
    volumes:
      - "{{ appdata_path }}/smokeping/config:/config"
      - "{{ appdata_path }}/smokeping/data:/data"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.smokeping.rule=Host(`ping.{{ secret_domain_full }}`)"
      - traefik.http.routers.smokeping.entrypoints=websecure
      - traefik.http.routers.smokeping.tls.certresolver=cloudflare
      - traefik.http.services.smokeping.loadbalancer.server.port=80
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: librespeed
    active: true
    image: linuxserver/librespeed
    labels:
      - traefik.enable=true
      - "traefik.http.routers.librespeed.rule=Host(`speed.{{ secret_domain_full }}`)"
      - traefik.http.routers.librespeed.entrypoints=websecure
      - traefik.http.routers.librespeed.tls.certresolver=cloudflare
      - traefik.http.services.librespeed.loadbalancer.server.port=80
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ status_librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped
