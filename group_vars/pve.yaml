---
pve_ip: 192.168.1.201
pve_hostname: soulpve

# soulfigurine
figurine_name: "{{ pve_hostname }}"

# grog.package
package_list:
  - name: hddtemp
  - name: mergerfs
  - name: nfs-kernel-server
  - name: ssh-import-id
  - name: xfsprogs

# mergerfs
mergerfs_mount:
  - { path: /mnt/storage }

parity_disks:
  # Dell R710
  - { path: /mnt/parity1, source: /dev/disk/by-id/ata-WDC_WD80EFAX-68LHPN0_7SGEPKNC-part1, fs: xfs, opts: defaults, content: false }
  # NetApp
  - { path: /mnt/parity2, source: /dev/disk/by-id/scsi-3500605ba00483830-part1, fs: xfs, opts: defaults, content: false }
  - { path: /mnt/parity3, source: /dev/disk/by-id/scsi-3500605ba002c3ed8-part1, fs: xfs, opts: defaults, content: false }

data_disks:
  # Dell R710
  - { path: /mnt/disk1, source: /dev/disk/by-id/ata-WDC_WD80EFAX-68LHPN0_7SGD2B6C-part3, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk2, source: /dev/disk/by-id/ata-HITACHI_HUA723020ALA640_YFJNG6RA-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk3, source: /dev/disk/by-id/ata-HITACHI_HUA723020ALA640_YFG04KBA-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk4, source: /dev/disk/by-id/ata-WDC_WD80EFAX-68LHPN0_7SGHHN6C-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk5, source: /dev/disk/by-id/ata-HITACHI_HUA723020ALA640_YGJLAWPA-part1, fs: xfs, opts: defaults, content: true }
  # NetApp
  - { path: /mnt/disk6, source: /dev/disk/by-id/scsi-3500605ba00497d10-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk7, source: /dev/disk/by-id/scsi-3500605ba002c4a14-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk8, source: /dev/disk/by-id/scsi-3500605ba002cb854-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk9, source: /dev/disk/by-id/scsi-3500605ba002cb860-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk10, source: /dev/disk/by-id/scsi-3500605ba002ee70c-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk11, source: /dev/disk/by-id/scsi-3500605ba0032e6b8-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk12, source: /dev/disk/by-id/scsi-3500605ba0048f1c4-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk13, source: /dev/disk/by-id/scsi-3500605ba00494460-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk14, source: /dev/disk/by-id/scsi-3500605ba00496f04-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk15, source: /dev/disk/by-id/scsi-3500605ba0030bb80-part1, fs: xfs, opts: defaults, content: true }

fstab_mergerfs:
  - { source: "/mnt/disk*", mountpoint: "/mnt/storage", fs: fuse.mergerfs, opts: "direct_io,defaults,allow_other,minfreespace=50G,fsname=mergerfs" }  

### NFS Setup
nfs_exports: [ "/mnt/storage *(rw,sync,fsid=0,no_root_squash,no_subtree_check)" ]

### Snapraid Config
snapraid_force_install: false
snapraid_email_address: "{{ snapraid_email }}"
snapraid_email_address_from: "{{ snapraid_email }}"
snapraid_email_address_to: "{{ snapraid email_to }}"
snapraid_gmail_pass: "{{ snapraid_email_password | password_hash('sha512') }}"
snapraid_healthcheck_io_uuid: "{{ snapraid_healthcheck_secret }}"

snapraid_config_excludes:
  # Standard
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"
  # SoulDeity
  - "snapshots/"
  - "Nextcloud/"
  - "*.raw"
  - "*.qcow2"
  - "*.vma.dat"
  - "*.vma.lzo"
  - "Proxmox/"
  - "*.srt"
  - "/mnt/storage/transcode/"
  - "transcode/"
  - "docker-backup.tar.gz"
  - "Tdarr/"

# ironicbadger.docker_compose_generator
compose_schema_version: 3
containers:
###
  - service_name: scrutiny-web
    container_name: scrutiny-web
    active: true
    image: linuxserver/scrutiny
    restart: unless-stopped
    ports:
      - 7278:8080
    volumes:
      - "{{ appdata_path }}/scrutiny:/config"
    environment:
      - SCRUTINY_WEB=true
    include_global_env_vars: true
###
  - service_name: scrutiny-collector
    container_name: scrutiny-collector
    active: true
    image: linuxserver/scrutiny
    restart: unless-stopped
    privileged: true
    volumes:
      - /dev/disk:/dev/disk
      - /run/udev:/run/udev:ro
      - "{{ appdata_path }}/scrutiny:/config"
    environment:
      - SCRUTINY_COLLECTOR=true
      - SCRUTINY_API_ENDPOINT=http://scrutiny-web:8080
    include_global_env_vars: true
  ###
  - service_name: plex
    image: ghcr.io/linuxserver/plex
    container_name: plex
    hostname: plex
    active: true
    network_mode: host
    volumes:
      - "{{ appdata_path }}/plex:/config"
      - "{{ data_path }}:/data"
    environment:
      - VERSION=docker
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: tautulli
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    hostname: tautulli
    active: true
    depends_on:
      - plex
    volumes:
      - "{{ appdata_path }}/tautulli:/config"
      - "{{ appdata_path }}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro"
    ports:
      - "8181:8181"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: nzbhydra 
    image: ghcr.io/linuxserver/nzbhydra
    container_name: nzbhydra
    hostname: nzbhydra
    active: true
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/nzbhydra:/config"
      - "{{ download_path }}:/downloads"
    ports:
      - "5076:5076"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: nzbget 
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    hostname: nzbget
    active: true
    volumes:
      - "{{ appdata_path }}/nzbget:/config"
      - "{{ download_path }}:/downloads"
    ports:
      - "6789:6789"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: sonarr
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    active: true
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}:/data"
    ports:
      - "8989:8989"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: radarr
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    hostname: radarr
    active: true
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}:/data"
    ports:
      - "7878:7878"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: bazarr
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    hostname: bazarr
    active: true
    volumes:
      - "{{ appdata_path }}/bazarr:/config"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}:/data"
    ports:
      - "6767:6767"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: lidarr
    image: ghcr.io/linuxserver/lidarr
    container_name: lidarr
    hostname: lidarr
    active: true
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/lidarr:/config"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}:/data"
    ports:
      - "8686:8686"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: lazylibrarian
    image: ghcr.io/linuxserver/lazylibrarian
    container_name: lazylibrarian
    hostname: lazylibrarian
    active: true
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/lazylibrarian:/config"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}:/data"
    ports:
      - "8686:8686"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: ombi
    image: ghcr.io/linuxserver/ombi:development
    container_name: ombi
    hostname: ombi
    active: true
    volumes:
      - "{{ appdata_path }}/ombi:/config"
    ports:
      - "3579:3579"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: organizr
    image: organizr/organizr
    container_name: organizr
    hostname: organizr
    active: true
    volumes:
      - "{{ appdata_path }}/organizr:/config"
    environment:
      - fpm=true
      - branch=v2-master
    ports:
      - "80:80"
    include_global_env_vars: true
    restart: unless-stopped
  ###

# template for docker-compose services
#  - service_name:
#    image:
#    container_name:
#    hostname:
#    active: true
#    volumes:
#      - "{{ appdata_path }}/app:/config"
#    environment:
#      -
#    ports:
#      - 
#    include_global_env_vars: true
#    restart: unless-stopped
  ###