---

## ironicbadger.docker_compose_generator
docker_compose_generator_output_path: /root/
appdata_path: /opt/appdata
containers:  
###
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ secret_cloudflare_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "/opt/appdata/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ secret_cloudflare_email }}"
      - "CLOUDFLARE_API_KEY={{ secret_cloudflare_api }}"
    restart: unless-stopped
###
  - service_name: unifi
    active: true
    image: lscr.io/linuxserver/unifi-network-application
    depends_on:
      - unifi-db
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ubiq.rule=Host(`unifi.{{ secret_domain_local }}`)"
      - traefik.http.routers.ubiq.entrypoints=websecure
      - traefik.http.routers.ubiq.tls=true
      - traefik.http.routers.ubiq.tls.certresolver=cloudflare
      - traefik.http.services.ubiq.loadbalancer.server.scheme=https
      - traefik.http.services.ubiq.loadbalancer.server.port=8443
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    volumes:
      - "{{ appdata_path }}/unifi:/config"
    environment:
      - MONGO_USER=unifi
      - "MONGO_PASS={{ secret_unifi_db_pass }}"
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: unifi-db
    active: true
    image: docker.io/mongo:4.4
    volumes:
      - "{{ appdata_path }}/unifi-db/data/db:/data/db"
      - "{{ appdata_path }}/unifi-db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro"
    restart: unless-stopped
  ###

# template for docker-compose services
  # - service_name:
  #   active: true
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   depends_on:
  #     -
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.XXXX.rule=Host(`XXXX.{{ secret_domain_full }}`)"
  #     #- traefik.http.routers.XXXX.entrypoints=websecure
  #     #- traefik.http.routers.XXXX.tls.certresolver=cloudflare
  #     - traefik.http.services.XXXX.loadbalancer.server.port=80
  #   ports:
  #     -
  #   volumes:
  #     - "{{ appdata_path }}/app:/config"
  #   environment:
  #     -
  #   #include_global_env_vars: true #optional - defaults to false
  #   restart: unless-stopped
  ###