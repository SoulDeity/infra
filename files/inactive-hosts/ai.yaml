---
ai_hostname: soulai
main_username: souldeity

# ironicbadger.figurine
figurine_name: "{{ ai_hostname }}"

# ironicbadger.ansible_role_bash_aliases
bash_aliases:
  - { alias: "ls", command: "ls --color=auto"}
  - { alias: "ll", command: "ls -la"}
  - { alias: "df", command: "df -h -x aufs -x tmpfs -x udev"}
  - { alias: "du", command: "du -ch"}
  - { alias: "c", command: "clear"}
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml "}
  - { alias: "dcporph", command: "docker-compose -f ~/docker-compose.yml up -d --remove-orphans"}
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }

# ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/appdata"
containers:
###
  - service_name: codeprojectai
    active: true
    image: codeproject/ai-server:gpu 
    volumes:
      - "{{ appdata_path }}/codeprojectai/data:/etc/codeproject/ai"
      - "{{ appdata_path }}/codeprojectai/modules:/app/modules"
    ports:
      - "32168:32168"
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]
    restart: unless-stopped
  ###

# template for docker-compose services
  # - service_name:
  #   active: true
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   depends_on:
  #     -
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.http.routers.XXXX.rule=Host(`XXXX.{{ secret_domain_full }}`)"
  #     #- traefik.http.routers.XXXX.entrypoints=websecure
  #     #- traefik.http.routers.XXXX.tls.certresolver=cloudflare
  #     - traefik.http.services.XXXX.loadbalancer.server.port=80
  #     #- traefik.http.routers.XXXX.middlewares=authelia@docker
  #   volumes:
  #     - "{{ appdata_path }}/app:/config"
  #   environment:
  #     -
  #   #include_global_env_vars: true #optional - defaults to false
  #   restart: unless-stopped
  ###