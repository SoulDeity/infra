services:
  unifi:
    container_name: unifi
    image: lscr.io/linuxserver/unifi-network-application
    depends_on:
      - unifi-db
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ubiq.rule=Host(`unifi.{{ secret_domain_local }}`)"
      - traefik.http.routers.ubiq.entrypoints=websecure
      - traefik.http.routers.ubiq.tls=true
      - traefik.http.routers.ubiq.tls.certresolver=cloudflare
      - traefik.http.services.ubiq.loadbalancer.server.scheme=https
      - traefik.http.services.ubiq.loadbalancer.server.port=8443
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    volumes:
      - "{{ appdata_path }}/unifi:/config"
    environment:
      - "PUID={{ docker_compose_generator_uid }}"
      - "PGID={{ docker_compose_generator_gid }}"
      - "TZ={{ host_timezone }}"
      - MONGO_USER=unifi
      - "MONGO_PASS={{ secret_unifi_db_pass }}"
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
    restart: unless-stopped
  unifi-db:
    image: docker.io/mongo:4.4
    container_name: unifi-db
    volumes:
      - "{{ appdata_path }}/unifi-db/data/db:/data/db"
      - "{{ appdata_path }}/unifi-db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro"
    restart: unless-stopped
  ###